% Generated by roxygen2 (4.0.2): do not edit by hand
\name{listMarketBook}
\alias{listMarketBook}
\title{listMarketBook}
\usage{
listMarketBook(marketIds = ListOfMarketId(), priceProjection = NULL,
  orderProjection = NULL, matchProjection = NULL, currencyCode = NULL,
  locale = NULL, exchange = .BetfairEnv$exchange,
  appKey = .BetfairEnv$appKey, sessionToken = .BetfairEnv$sessionToken)
}
\arguments{
\item{marketIds}{is mandatory of type ListOfMarketId.
One or more market ids. The number of markets returned depends on the
amount of data you request via the price projection.}

\item{priceProjection}{is optional of type PriceProjection.
The projection of price data you want to receive in the response.}

\item{orderProjection}{is optional of type OrderProjection.
The orders you want to receive in the response.}

\item{matchProjection}{is optional of type MatchProjection.
If you ask for orders, specifies the representation of matches.}

\item{currencyCode}{is optional of type character.
A Betfair standard currency code. If not specified, the default
currency code is used.}

\item{locale}{is optional of type character.
The language used for the response. If not specified, the default is
returned.}
}
\value{
output data
}
\description{
Returns a list of dynamic data about markets. Dynamic data includes prices,
the status of the market, the status of selections, the traded volume, and
the status of any orders you have placed in the market.
}
\examples{
projection<-PriceProjection(priceData=SetOfPriceData("EX_BEST_OFFERS"),
virtualise=FALSE,
exBestOffersOverrides=ExBestOffersOverrides(bestPricesDepth=2L,
                                            rollupModel=RollupModel("STAKE"),
                                            rollupLimit=20L),
rolloverStakes=FALSE)

# Get all the runners/prices book for this market
# According to the projections
runnersPriceInFirstRace<-r.listMarketBook(
  marketIds=ListOfMarketId(marketId),
  priceProjection=projection,
  orderProjection=OrderProjection("ALL"),
  matchProjection=MatchProjection("ROLLED_UP_BY_PRICE")
)

# Want to look at exchange and sp
projection<-list(priceData=list('EX_ALL_OFFERS','SP_AVAILABLE','SP_TRADED','EX_TRADED'))

# Ask the book for the prices on this market
runnersPriceInRaces<-listMarketBook(
  marketIds=list(marketId),
  priceProjection=projection
)
}

